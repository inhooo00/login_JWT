spring:
  profiles:
    active: local, prod
    group:
      local: common
      prod: common

---
spring:
  config:
    activate:
      on-profile: common

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
    defer-datasource-initialization: true
  servlet:
    multipart:
      enabled: true
      max-file-size: 50MB
      max-request-size: 50MB

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true


jwt:
  secret: ${JWT_SECRET}
  access-token-validity-in-milliseconds: ${ACCESS_TOKEN_VALIDITY}
  refresh-token-validity-in-milliseconds: ${REFRESH_TOKEN_VALIDITY}

oauth:
  kakao:
    rest-api-key: ${KAKAO_REST_API_KEY}
    redirect-url: ${KAKAO_REDIRECT_URL}
  google:
    client-id: ${GOOGLE_CLIENT_ID}
    client-secret: ${GOOGLE_CLIENT_SECRET}
    redirect-url: ${GOOGLE_REDIRECT_URL}

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS}

---
spring:
  config:
    activate:
      on-profile: local

  datasource:
    url: ${DB_URL}?rewriteBatchedStatements=true&profileSQL=true&logger=Slf4JLogger&maxQuerySizeToLog=999999
  jpa:
    show-sql: true

---
spring:
  config:
    activate:
      on-profile: prod

  jpa:
    show-sql: false

cloud:
  aws:
    s3:
      bucket: ${S3_BUCKET}
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false
    credentials:
      AccessKey: ${S3_KEY}
      SecretKey: ${S3_SECRET_KEY}